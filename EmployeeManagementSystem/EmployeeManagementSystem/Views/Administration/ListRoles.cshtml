@model IEnumerable<IdentityRole>

@{
    ViewBag.Title = "List Roles page";
}

<h1>All Roles</h1>

@if (!Model.Any())
{
    <p>There are no roles</p>
    <a asp-controller="Administration" asp-action="CreateRole" class="btn btn-primary">Create roles</a>
}
else
{
    <div class="mb-3"> <a asp-controller="Administration" asp-action="CreateRole" class="btn btn-primary">Add a new role</a></div>
    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                Role ID: @role.Id
            </div>
            <div class="card-body">
                @role.Name
            </div>
            <div class="card-footer">
                <a class="btn btn-primary" asp-controller="Administration" asp-action="EditRole" asp-route-Id=@role.Id>Edit</a>
                <button class="btnShowPopup btn btn-danger" data-id="@role.Id">Delete</button>

            </div>
        </div>
    }
}


<div id="popup-overlay" style="display: none; position: fixed; top: 0; bottom: 0; left: 0; right: 0; background-color: rgba(0, 0, 0, 0.5); z-index: 999;"></div>

<div class="popup" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #fff; padding: 20px; border: 1px solid #ccc; width: 400px; z-index: 1000;">
    <h3>Are you sure to delete this role?</h3>
    <p id="popupId"></p>
    <div class="m-1">
        <button class="btnConfirmDelete btn btn-danger">Yes</button>
    </div>
    <div class="m-1">
        <button type="button" id="btnClosePopup" class="btn-primary">Cancel</button>
    </div>

</div>

@section Scripts
{

    <script>
        $(document).ready(function () {
            $(".btnShowPopup").click(function () {

                var memberId = $(this).data("id");

                $("#popup-overlay").show();
                $(".popup #popupId").text("Role ID: " + memberId);
                $(".popup").show();

                // Disable scrolling on the background page
                $("body").css("overflow", "hidden");

                $(".btnConfirmDelete").click(function () {


                    var memberId = $(".popup #popupId").text().split(": ")[1];
                    deleteMember(memberId);

                });

                function deleteMember(memberId) {
                    $.ajax({
                        url: "/Administration/Delete",
                        type: "POST",
                        data: { id: memberId },
                        success: function () {
                            // Handle the success response
                            $(".popup").hide();
                            location.reload();
                        },
                        error: function (xhr) {
                            if (xhr.status == 403) {
                                // Access Denied, redirect to the Access Denied action
                                window.location.href = "/Account/AccessDenied";
                            } else {
                                // Handle other error scenarios
                                $("#popup-error").show();
                            }
                        }
                    });
                }
            });

            $("#popup-overlay").click(function () {
                $("#popup-overlay").hide();
                $(".popup").hide();

                // Enable scrolling on the background page
                $("body").css("overflow", "auto");
            });

            $("#btnClosePopup").click(function () {
                $("#popup-overlay").hide();
                $(".popup").hide();

                // Enable scrolling on the background page
                $("body").css("overflow", "auto");
            });




        });
    </script>
}